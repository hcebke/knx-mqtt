---
# One of 'fatal', 'error', 'warn', 'info', 'debug', 'trace'
loglevel: info

outgoingMqttMessage:

  # The message type to publish over MQTT when receiving events from KNX
  # One of:
  #   value - the value with preserved type or as string representation if emitValueAsString is true
  #   value-with-unit - a string representation of the value including the unit (if any)
  #   bytes - the raw bytes as received from KNX
  #   json  - a json object containing the fields specified in includedJsonFields.
  type: json

  # Emit values using group address
  emitUsingAddress: true
  # Emit values using human readable group address names
  emitUsingName: true
  # Emit the value payload as string, if false, the type will be preserved.
  emitValueAsString: false

  # When sending MQTT messages as JSON, these values determines what should be included.
  includedJsonFields:
    # Include the field `bytes`, with a base64 representation of the raw bytes
    bytes: true
    # Include the field `name`, containing the human readable name of the address
    name: true
    # Include the field `value`, containing the raw value or as string representation if emitValueAsString is true
    value: true
    # Include the field `unit`, containing the unit of the datatype (if any)
    unit: true
    # Include the field `command`, containing the KNX command (can be one of "GroupValue_Read", "GroupValue_Write", "GroupValue_Response")
    command: true

  # If true, KNX commands "GroupValue_Read" will be emitted to <topicPrefix>/x/x/x/GroupValue_Read
  readCommandsOwnPrefix: true

knx:
  # ETS exported group addresses
  etsExport: knx.xml

  # Address to the KNX gateway
  endpoint: 224.0.23.12:3671

  # If true, connect over tunnel/unicast, if false use router/multicast.
  tunnelMode: false

  # Ignore unknown group addresses
  ignoreUnknownGroupAddresses: false

  # Enables logging from the KNX library
  enableLogs: false

  # Translate flat group addresses to a specific format
  # Can be specified as an integer:
  #   0 = No translation (flat address)
  #   1 = 2-part notation (main/sub)
  #   2 = 3-part notation (main/middle/sub)
  # Or as a string (case-insensitive):
  #   "none" or "flat" = No translation (flat address)
  #   "2-part" or "two-part" = 2-part notation (main/sub)
  #   "3-part" or "three-part" = 3-part notation (main/middle/sub)
  translateFlatGroupAddresses: "3-part"

  # KNX message logging configuration
  knxLog:
    # Enable KNX message logging to file
    enabled: false
    # Log format: 'json' or 'text'
    format: json
    # Path to the log file
    file: /var/log/knx-mqtt/knx-messages.log
    # Maximum size in KiB before rotation
    maxSize: 102400
    # Maximum age in days before deletion
    maxAge: "24h"
    # Maximum number of files to keep
    maxFiles: 5
    # Whether to compress rotated files
    compress: true

mqtt:
  # URL to MQTT broker
  #url: 'ssl://localhost:8883'
  url: 'tcp://localhost:1883'
  
  # Set a custom ID to use for the MQTT client
  # clientId: knx-mqtt
  
  #username: your username
  #password: your password

  # Set TLS configuration
  #tlsKey: /path/to/keyfile.key
  #tlsCert: /path/to/certificate.crt
  #tlsCa: /path/to/certificate-authority.crt

  # Prefix to MQTT topic
  topicPrefix: knx/
  # Set the QoS for published messages
  # 0 = at most once, 1 = at least once, 2 = exactly once
  qos: 0
  # Set retain flag on messages
  retain: false
